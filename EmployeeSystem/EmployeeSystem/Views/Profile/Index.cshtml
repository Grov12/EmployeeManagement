@model EmployeeSystem.Models.ApplicationUser
@{
    ViewData["Title"] = "Index";
}
<head>
    <link href="http://maxcdn.bootstrapcdn.com/bootstrap/3.3.0/css/bootstrap.min.css" rel="stylesheet" id="bootstrap-css">
    <script src="http://maxcdn.bootstrapcdn.com/bootstrap/3.3.0/js/bootstrap.min.js"></script>
    <script src="http://code.jquery.com/jquery-1.11.1.min.js"></script>
    <link rel="stylesheet" href="~/css/profile.css"> 
 
</head>


<div class="container">
    <div class="row profile">
        <div class="col-md-3">
            <div class="profile-sidebar">
                <div class="profile-userpic">
                    @try
                    {

                        if (Model.Profile.ProfileImageLink.Equals(null))
                        {
                            <img src="https://static.change.org/profile-img/default-user-profile.svg" class="img-responsive" alt="">
                        }
                        else
                        {
                            <img src="@Model.Profile.ProfileImageLink" class="img-responsive" alt="">
                        }

                    }
                    catch (NullReferenceException)
                    {
                        <img src="https://static.change.org/profile-img/default-user-profile.svg" class="img-responsive" alt="">
                    }





                </div>
                <!-- END SIDEBAR USERPIC -->
                <!-- SIDEBAR USER TITLE -->
                <div class="profile-usertitle">
                    <div class="profile-usertitle-name">
                       @Html.DisplayFor(modelView => modelView.UserName)
                    </div>
                    <div class="profile-usertitle-job">
                        Department: @Html.DisplayFor(modelView => modelView.Department.Departmentname)
                    </div>
                </div>
                <!-- END SIDEBAR USER TITLE -->
                <!-- SIDEBAR BUTTONS -->
                <div class="profile-userbuttons">
                    <button type="button" class="btn btn-success btn-sm">Follow</button>
                    <button type="button" class="btn btn-danger btn-sm">Message</button>
                 
                </div>

                <div class="profile-usermenu">
                    <ul class="nav">
                        <li class="active">
                            @try
                            {
                                @if (User.Identity.Name.Equals(Model.UserName) && User.Identity.IsAuthenticated)
                                {
                                    <a asp-action="Edit" asp-route-id="@Model.Id">Edit User</a>
                                }

                            } catch(Exception e)
                            {

                            }



                        </li>
                       

                    </ul>
                </div>
                <!-- END MENU -->
            </div>
        </div>
        <div class="col-md-9">
            <div class="profile-content">
                <h4>Description</h4> <br />
                @try
                {
                
                    @Html.DisplayFor(modelView => modelView.Profile.ProfileDescription);

                 

                }
                catch (NullReferenceException)
                {
                    @Html.DisplayFor(modelView => modelView.Department.DepartmentId)
                }





            </div>
        </div>
    </div>
</div>

<center>
  
</center>
<br>
<br>
